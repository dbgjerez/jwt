buildscript {
	ext {
		springBootVersion = '2.0.0.M2'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

allprojects {

	apply plugin: 'java'
	apply plugin: 'eclipse'
	
	group = 'com.dbg.jwt'
	sourceCompatibility = 1.8
	
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	
	dependencies {
		compile('org.projectlombok:lombok:1.16.18')
	}
	
	test {
		systemProperty 'user.timezone', 'Europe/Madrid'
	}

}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'	

ext {
	springCloudVersion = 'Finchley.M1'
}

dependencies {
	
	compile			('org.springframework.boot:spring-boot-starter-web')
	compile			('org.springframework.data:spring-data-mongodb')
	compile			('org.springframework.cloud:spring-cloud-starter-eureka')
	compile			('io.jsonwebtoken:jjwt:0.7.0')
	compile			('com.auth0:java-jwt:3.2.0')
	compile project (':jwt-dto')
	
	testCompile		('org.springframework.boot:spring-boot-starter-test')
	testCompile		('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/dbg/jwt/model/**', 'com.dbg.jwt.JwtApplication'
            ])
        })
    }
}

check.dependsOn jacocoTestReport

project(':jwt-dto') {

	version = '0.0.1-SNAPSHOT'
	
	dependencies {
		
		compile 	('com.fasterxml.jackson.core:jackson-annotations:2.9.1')
		
	}

}
